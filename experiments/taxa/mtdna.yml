name: taxa-mtdna

experiments: |
  lambda:
    metadata = load_metadata('mtdna-taxa')
    exp_options = {}
    for group in metadata:
      for subgroup in metadata[group]['interesting_groups']:
        if ' ' in subgroup:
          outer_subgroup_name = subgroup.split(' ')[0]
          outer_subgroup_contains = [outer_subgroup_name]
          outer_subgroup_not_contains = [subgroup]
        else:
          outer_subgroup_name = group
          outer_subgroup_contains = []
          outer_subgroup_not_contains = [subgroup]
        exp_options[subgroup] = {
          'expand_options': {
            'k': '4..7'
          },
          'dataset': {
            'archive': 'mtdna',
            'metadata': 'mtdna-taxa'
          },
          'groups': {
            subgroup: {
              'base_group': group,
              'name_contains': [subgroup],
              'name_not_contains': []
            },
            '{}, not {}'.format(outer_subgroup_name, subgroup): {
              'base_group': group,
              'name_contains': outer_subgroup_contains,
              'name_not_contains': outer_subgroup_not_contains
            }
          }
        }
    return exp_options

steps:
  - type: select
    copy_for_options: [k]
    pick_group: |
      lambda metadata, group_options, options:
        return [x for x in metadata[group_options['base_group']]['sequences']
                        if (not group_options['name_contains'] or any(n in x['name'] for n in group_options['name_contains']))
                        and not any(n in x['name'] for n in group_options['name_not_contains'])]

  - type: kmers
    output_file: cgrs.mm-repr
    mode: counts
    k: from_options
    bits_per_element: 32

  #- type: distances
  #  input_file: cgrs.mm-repr
  #  output_prefix: dists
  #  distances: [manhat, info]
  #
  #- type: mds
  #  dists_file: dists-info.mm-dist
  #  dimensions: 10
  #  output_file: mds10-info.json
  #
  #- type: mds
  #  dists_file: dists-manhat.mm-dist
  #  dimensions: 10
  #  output_file: mds10-manhat.json

  - &classify_options
    type: classify
    features_file: cgrs.mm-repr
    output_file: classification-kmers.json
    validation_count: 10
    classifiers:
      - 10-nearest-neighbors
      - nearest-centroid-mean
      - nearest-centroid-median
      - logistic-regression
      - sgd
      - linear-svm
      - quadratic-svm
      - cubic-svm
      - decision-tree
      - random-forest
      - adaboost
      - gaussian-naive-bayes
      - lda
      - qda
      - multilayer-perceptron

  #- type: classify
  #  features_file: dists-manhat.mm-dist
  #  output_file: classification-manhat.json
  #  <<: *classify_options
  #
  #- type: classify
  #  features_file: dists-info.mm-dist
  #  output_file: classification-info.json
  #  <<: *classify_options
