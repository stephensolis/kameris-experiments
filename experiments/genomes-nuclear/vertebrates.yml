name: genomes-nuclear-vertebrates

experiments:
  all:
    expand_options:
      k: 4..7
    dataset:
      archive: genomes-animals
      metadata: genomes-animals
    groups:
      birds:
        taxonomy_contains: ['Aves;']
      fish:
        taxonomy_contains: ['Actinopterygii;', 'Chondrichthyes;', 'Hyperotreti;', 'Hyperoartia;']
      mammals:
        taxonomy_contains: ['Mammalia;']

steps:
  - type: select
    copy_for_options: [k]
    pick_group: |
      lambda metadata, group_options, options:
        return [{
          'id': metadata[species]['id'],
          'taxonomy': metadata[species]['taxonomy'],
          'filenames': [species + '/nuclear/' + x['id'] + '.fasta' for x in metadata[species]['sequences']
                                                                   if x['type'] == 'chromosome' or x['type'] == 'linkage group']
        } for species in metadata
           if any(tax_str in metadata[species]['taxonomy'] for tax_str in group_options['taxonomy_contains'])]
    postprocess: |
      lambda metadata_entry, entry_sequences, options:
        seq = ''.join(seqs[0] for seqs in entry_sequences)
        return [(metadata_entry, [seq])]

  - type: kmers
    output_file: cgrs.mm-repr
    mode: counts
    k: from_options
    bits_per_element: 32

  #- type: distances
  #  input_file: cgrs.mm-repr
  #  output_prefix: dists
  #  distances: [manhat]
  #
  #- type: mds
  #  dists_file: dists-manhat.mm-dist
  #  dimensions: 10
  #  output_file: mds10-manhat.json

  - &classify_options
    type: classify
    features_file: cgrs.mm-repr
    output_file: classification-kmers.json
    validation_count: 10
    classifiers:
      - 10-nearest-neighbors
      - nearest-centroid-mean
      - nearest-centroid-median
      - logistic-regression
      - sgd
      - linear-svm
      - quadratic-svm
      - cubic-svm
      - decision-tree
      - random-forest
      - adaboost
      - gaussian-naive-bayes
      - lda
      - qda
      - multilayer-perceptron

  #- type: classify
  #  features_file: dists-manhat.mm-dist
  #  output_file: classification-manhat.json
  #  <<: *classify_options
