name: nuclear-one-vs-one

experiments: !!omap
  - human-vs-chimp:
      expand_options: &expand_options
        k: 8..11
        sample_len: [50000, 100000, 150000, 1000000, 2000000, 4000000]
        num_samples: [5, 10]
        no_copy: true
      groups:
        human:
          dataset:
            archive: genomes-animals-h_n
            metadata: nuclear-animals
          species: Homo sapiens
        chimp:
          dataset:
            archive: genomes-animals-o_z
            metadata: nuclear-animals
          species: Pan troglodytes

  - human-vs-human:
      expand_options: *expand_options
      groups:
        human1:
          dataset:
            archive: genomes-animals-h_n
            metadata: nuclear-animals
          species: Homo sapiens
        human2:
          dataset:
            archive: genomes-animals-h_n
            metadata: nuclear-animals
          species: Homo sapiens

steps:
  - type: select
    pick_group: |
      lambda metadata, group_options:
        seq_metadata = [x for x in metadata[group_options['species']]['sequences']
                              if x['type'] == 'chromosome' or x['type'] == 'linkage group']
        for x in seq_metadata:
          x['filename'] = group_options['species'] + '/nuclear/' + x['id'] + '.fasta'
        return seq_metadata
    postprocess: |
      lambda metadata_entry, entry_sequences:
        import random
        seq = entry_sequences[0]
        sample_idxs = random.sample(range(int(len(seq)/{sample_len})), {num_samples})
        samples = []
        for idx in sample_idxs:
          start_idx = {sample_len}*idx
          samples.append((dict(metadata_entry, sample_start=start_idx), [seq[start_idx:start_idx+{sample_len}]]))
        return samples

  - type: kmers
    output_file: cgrs.mm-repr
    k: '{k}'
    bits_per_element: 32

  #- type: distances
  #  input_file: cgrs.mm-repr
  #  output_prefix: dists
  #  distances: [manhat]
  #
  #- type: mds
  #  dists_file: dists-manhat.mm-dist
  #  dimensions: 10
  #  output_file: mds10-manhat.json

  - &classify_options
    type: classify
    features_type: mmg-repr
    features_file: cgrs.mm-repr
    output_file: classification-kmers.json
    validation_count: 10
    classifiers:
      - 10-nearest-neighbors
      - nearest-centroid-mean
      - nearest-centroid-median
      - logistic-regression
      - sgd
      - linear-svm
      - quadratic-svm
      - cubic-svm
      - decision-tree
      - random-forest
      - adaboost
      - gaussian-naive-bayes
      - lda
      - qda
      - multilayer-perceptron

  #- type: classify
  #  features_type: mmg-dists
  #  features_file: dists-manhat.mm-dist
  #  output_file: classification-manhat.json
  #  <<: *classify_options
