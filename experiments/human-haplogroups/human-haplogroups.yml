name: human-haplogroups

experiments:
  haplogroup-whole: &exp_options
    expand_options:
      k: 4..7
      min_group_pts:
        - 50 # 113 groups
        - 100 # 66 groups
        - 200 # 27 groups
    dataset:
      archive: mtdna
      metadata: mtdna-human-haplogroups
    groups: |
      lambda options, metadata:
        import collections
        counts = collections.Counter(x['haplogroup'] for x in metadata)
        return {h: {'haplogroup': h + '$'} for h in counts if h and counts[h] >= options['min_group_pts']}

  haplogroup-firstletter:
    <<: *exp_options
    expand_options:
      k: 4..7
      min_group_pts:
        - 100 # 23 groups
        - 500 # 13 groups
        - 1000 # 9 groups
    groups: |
      lambda options, metadata:
        import collections
        counts = collections.Counter(x['haplogroup'][0] for x in metadata)
        return {h: {'haplogroup': h} for h in counts if h and counts[h] >= options['min_group_pts']}

steps:
  - type: select
    copy_for_options: [k]
    pick_group: |
      lambda metadata, group_options, options:
        import re
        return [x for x in metadata if re.match(group_options['haplogroup'], x['haplogroup'])]

  - type: kmers
    output_file: cgrs.mm-repr
    mode: counts
    k: from_options
    bits_per_element: 16

  #- type: distances
  #  input_file: cgrs.mm-repr
  #  output_prefix: dists
  #  distances: [manhat, info]
  #
  #- type: mds
  #  dists_file: dists-info.mm-dist
  #  dimensions: 10
  #  output_file: mds10-info.json
  #
  #- type: mds
  #  dists_file: dists-manhat.mm-dist
  #  dimensions: 10
  #  output_file: mds10-manhat.json

  - &classify_options
    type: classify
    features_file: cgrs.mm-repr
    output_file: classification-kmers.json
    validation_count: 10
    classifiers:
      - 10-nearest-neighbors
      - nearest-centroid-mean
      - nearest-centroid-median
      - logistic-regression
      - sgd
      - linear-svm
      - quadratic-svm
      - cubic-svm
      - decision-tree
      - random-forest
      - adaboost
      - gaussian-naive-bayes
      - lda
      - qda
      - multilayer-perceptron

  #- type: classify
  #  features_file: dists-manhat.mm-dist
  #  output_file: classification-manhat.json
  #  <<: *classify_options
  #
  #- type: classify
  #  features_file: dists-info.mm-dist
  #  output_file: classification-info.json
  #  <<: *classify_options
